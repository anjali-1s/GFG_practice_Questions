class Solution {
  public:
    int solve(int N, int K, vector<int> &arr) {
        int sum = 0;
        for(int i = 0; i < N; i++) sum += arr[i];           // total sum of all the elements
        vector<int>divisors;        // to store divisors
        
        int M = sqrt(sum)+1;
        
        for(int i = 1; i < M; i++){         // will run till sqrt(M)
            if(sum % i == 0){
                divisors.push_back(i);
                divisors.push_back(sum/i);
            }
        }
        for(int i = 1; i < N; i++) {            // prefix sum array
            arr[i]+=arr[i-1];
        }
        
        int maxg = 1;           // bcz 1 is divided by everything
        for(int x:divisors){
            int ans = 0;
            for(int i = 0; i < N; i++){
                if(arr[i]%x==0)ans++;
            }
                if(ans >= K){
                    maxg = max(maxg,x);
                }
        }
            return maxg;
    }
};
